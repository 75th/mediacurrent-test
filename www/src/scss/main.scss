@import "base/_base.scss";    // Keep at top of file
@import "_global.scss"; // Keep at top of file

html, body {
	min-height: 100vh;
}

body {
	@include fauna;
	--blue: #{$blue};
	--blue-dark: #{$blue-dark};
	--gray-light: #{$gray-light};
	--white: #{$white};
	--black: #{$black};

	--transition-duration: 0s;

	// "Padding" around the content container, which doesn't actually use CSS padding
	--content-offset-n: 58px;
	--content-offset-s: var(--content-offset-n);
	--content-offset-w: 70px;
	--content-offset-e: 70px;

	color: var(--text-c);
	font-size: 20px;
	display: flex;
	flex-direction: row-reverse;
	justify-content: space-between;
	align-items: stretch;
	transition: color var(--transition-duration);
	scrollbar-color: var(--scrollbar-color);
}

div.bg {
	background: url('../images/background.jpg') center top no-repeat;
	background-size: cover;
	min-width: 300px;
	max-width: 700px;
	flex-shrink: 1;
	flex-grow: 2;
}

div.content {
	background-color: var(--content-bgc);
	transition: background-color var(--transition-duration);
	flex-shrink: 0;
	flex-grow: 1;
	display: grid;

	grid-template-columns: var(--content-offset-w)  1fr  var(--content-offset-e);

	// Split the logo into two rows, since the main content appears to be
	// vertically centered between the midpoint of the logo and the bottom
	// of the page.
	// UPDATE: The above only applies to the desktop mockup. The tablet
	// mockup is somewhat different. If there is a quantifiable rule
	// governing the vertical position of the main content at all widths,
	// I have failed to discover it and would need to ask the designer.
	grid-template-rows: var(--content-offset-n)  floor($color-button-y / 2)  ceil($color-button-y / 2)  1fr  $color-button-y  var(--content-offset-s);
}

nav {
	grid-area: 2 / 2 / span 2 / span 1;
	display: flex;
	flex-wrap: wrap;
	justify-content: space-between;
	align-items: center;
	height: $color-button-y;

	svg g {
		fill: var(--logo-c);
		transition: fill var(--transition-duration);
	}
}

.color-modes {
	height: $color-button-y;
	position: relative;
	min-width: 175px;

	button {
		@include fauna;
		position: absolute;
		top: 0px;
		right: 0px;
		font-size: 16px;
		color: var(--text-c);
		background: transparent;
		transition: background-color var(--transition-duration), color var(--transition-duration);
		border: $color-button-border-width solid var(--button-border-c);
		border-radius: 10000px; // Large value creates the pill shape automatically
		height: 100%;
		padding: $color-button-pn  $color-button-pe  $color-button-ps  $color-button-pw;
		line-height: $color-icon-y;
		cursor: pointer;
		outline: none;

		&:focus, &:active {
			box-shadow: 0px 0px 0px 2px var(--button-border-c);
		}

		&:hover {
			color: var(--button-hover-c);
			background-color: var(--button-hover-bgc);
		}


		span {
			display: block;
			width: 100%;
			height: 100%;
			white-space: nowrap;

			&::before {
				content: url('../images/mode-icon.svg');
				display: inline-block;
				width: $color-icon-x;
				height: $color-icon-y;
				vertical-align: middle;
				margin-right: $color-button-pw - 2px;
			}
		}
	}
}

a.logo {
	display: block;
	outline-color: var(--button-border-c);
	margin-bottom: 20px;

	// Align letter m to left margin, not the swoosh. The width from the
	// swoosh's left end to the letter's left end is 15% of total icon width
	transform: translateX(-15%);

	svg {
		display: block;
		height: $logo-y;
		width: auto;
	}
}

main {
	grid-area: 3 / 2 / span 4 / span 1;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: flex-start;
	// Some vertical padding to prevent collision with overlapping logo row
	padding: ($color-button-y + 90px) 0px;
}

h2, h1 {
	margin: 0px;
}

h2 {
	font-weight: normal;
	font-size: 30px;
	line-height: 1.2;
}

h1 {
	@include playfair;
	font-size: 98px;
	line-height: 1.1;
}

hr {
	border: 0px none;
	border-bottom: 4px solid var(--separator-c);
	transition: border-color var(--transition-duration);
	width: 250px;
	max-width: 100%;
	margin: 30px 0px 40px;

	+ p {
		margin-top: 0px;

		// Wrap no later than the end of the first sentence.
		// Measure the sentence width, divide by font size, and round up.
		max-width: 19em;
	}
}

// Some duplicate code here, but the link button and color buttons
// have enough differences that I think it's okay
main a {
	$box-shadow: 0px 3px 15px rgba(0, 0, 0, 0.3);
	font-size: 20px;
	line-height: 20px;
	display: inline-block;
	margin-top: 16px;
	border-radius: 10000px;
	border: 1px solid var(--button-border-c);
	background-color: var(--link-button-bgc);
	box-shadow: $box-shadow;
	padding: 20px 34px;
	outline: none;
	transition: all var(--transition-duration);

	&:link, &:visited {
		text-decoration: none;
		color: var(--text-c);

		&:focus {
			box-shadow: 0px 0px 0px 2px var(--button-border-c);
		}

		&:hover, &:active {
			color: var(--button-hover-c);
			background-color: var(--button-hover-bgc);

			// Go back to normal shadow when hovering while focused
			&, &:focus {
				box-shadow: $box-shadow;
			}
		}
	}
}


// Support MacOS native dark mode, even for users without JavaScript
body {
	@include light-mode;

	&:not(.dark):not(.light) { // Animation in Safari is janky without this line
		@media (prefers-color-scheme: dark) {
			@include dark-mode;
		}
	}
}

body.light {
	@include light-mode;
}

body.dark {
	@include dark-mode;
}

// Don't show color toggle buttons to users without JS
body:not(.js) .color-modes {
	display: none;
}



@import "_responsive.scss"; // Keep at bottom of file